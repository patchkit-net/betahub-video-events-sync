@startuml BHVES Detailed Class Diagram

' Main BHVES Interface
class BHVESInstance {
  -startTimestampParsed: Date | null
  -dataStore: DataStore
  -videoPlayer: HTMLVideoElement | null
  -timeUpdateHandler: ((event: Event) => void) | null
  +constructor(params: BHVESConstructorParams)
  +addData(params: AddDataParams): Promise<Response<ProcessingResult[]>>
  -setupVideoPlayer(onStateUpdate?: OnStateUpdateCallback, onTimeUpdate?: OnTimeUpdateCallback): void
  -handleTimeUpdate(onStateUpdate?: OnStateUpdateCallback, onTimeUpdate?: OnTimeUpdateCallback): void
  +destroy(): void
  +get data(): {[key: string]: Data[]}
}

' Data Management Classes
class DataStore {
  -data: {[key: string]: Data[]}
  -dataInternal: {[key: string]: DataInternal[]}
  -dataIndexManager: DataIndexManager
  +storeData(name: string, data: Data[], sortData?: boolean): Promise<void>
  +findMatchingIndexes(timestamp: Date): CategoryIndexes
  +getData(): {[key: string]: Data[]}
  +getDataInternal(): {[key: string]: DataInternal[]}
  +clear(): void
}

class DataIndexManager {
  -indexes: {[key: string]: DataIndex}
  +addData(category: string, data: DataInternal[], sortData?: boolean): Promise<void>
  +findMatchingIndexes(timestamp: Date): CategoryIndexes
  +clear(): void
}

interface DataIndex {
  +startTimes: number[]
  +endTimes: number[]
  +indexes: number[]
}

' Configuration and Request Types
class BHVESConstructorParams {
  +videoPlayerDomId: string
  +startTimestamp: string
  +onTimeUpdate?: OnTimeUpdateCallback
  +onStateUpdate?: OnStateUpdateCallback
}

class AddDataParams {
  +entries: AddDataEntry[]
  +options?: AddDataOptions
}

class AddDataOptions {
  +onProgress?: ProgressCallback
  +onSuccess?: SuccessCallback
  +onError?: ErrorCallback
  +sortData?: boolean
}

class AddDataEntry {
  +name: string
  +dataJSONL: string
}

' Data Structures
class Data {
  +start_timestamp: string
  +end_timestamp?: string
  +type: string
  +message?: string
  +details?: object
}

class DataInternal {
  +start_timestamp: Date
  +end_timestamp?: Date
  +type: string
  +message?: string
  +details?: object
}

class State {
  +videoPlayerTimeSeconds: number
  +timestamp: string
  +matchingIndexes: CategoryIndexes
  +activeMatchingIndexes: CategoryIndexes
}

' Callback Types
class OnTimeUpdateCallback {
  +(params: {videoPlayerTimeSeconds: number, timestamp: string}): void
}

class OnStateUpdateCallback {
  +(params: {state: State, data: {[key: string]: Data[]}}): void
}

class ProgressCallback {
  +(status: {status: 'loading' | 'error' | 'success', progress: number}): void
}

class SuccessCallback {
  +(data: {[key: string]: Data[]}): void
}

class ErrorCallback {
  +(error: {message: string, details?: {successfulEntries?: ProcessingResult[], failedEntries?: ProcessingError[]}}): void
}

' Error and Response Types
class ErrorType {
  +ValidationError
  +DataProcessingError
  +ConfigurationError
  +UnknownError
}

class ErrorContext {
  +operation: string
  +component: string
  +timestamp: string
  +additionalInfo?: Record<string, unknown>
}

class Response<T> {
  +status: 'success' | 'error'
  +message: string
  +data?: T
  +details?: Record<string, unknown>
  +timestamp: string
}

class ProcessingResult {
  +name: string
  +itemCount: number
}

class ProcessingError {
  +name: string
  +message: string
  +details?: Record<string, unknown>
}

class CategoryIndexes {
  +{[key: string]: number[]}
}

' Relationships
BHVESInstance --> BHVESConstructorParams: uses
BHVESInstance --> AddDataParams: uses
BHVESInstance --> DataStore: contains
BHVESInstance --> OnStateUpdateCallback: optional callback
BHVESInstance --> OnTimeUpdateCallback: optional callback
BHVESInstance --> Response: returns

DataStore --> Data: stores
DataStore --> DataInternal: stores
DataStore --> DataIndexManager: contains
DataStore --> CategoryIndexes: returns

DataIndexManager --> DataIndex: contains
DataIndexManager --> DataInternal: indexes
DataIndexManager --> CategoryIndexes: returns

AddDataParams --> AddDataEntry: contains
AddDataParams --> AddDataOptions: optional
AddDataEntry --> Data: references
State --> CategoryIndexes: contains
OnStateUpdateCallback --> State: uses
OnStateUpdateCallback --> Data: uses

Response --> ProcessingResult: can contain
Response --> ProcessingError: can contain

' Notes
note right of DataIndexManager
  Optimizes timestamp-based lookups
  using binary search with Date objects
end note

note right of DataStore
  Manages both original and internal
  data formats for performance
end note

note right of BHVESInstance
  Main class for video
  event synchronization
end note

note right of DataInternal
  Internal format with parsed
  Date objects for performance
end note

@enduml 