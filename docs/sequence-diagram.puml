@startuml BHVES Sequence Diagram

actor User
participant "Video Player" as Player
participant "BHVESInstance" as BHVES
participant "DataStore" as Store
participant "DataIndexManager" as IndexManager

== Initialization ==
User -> BHVES: new BHVESInstance(params)
activate BHVES
BHVES -> BHVES: Validate and parse parameters
BHVES -> BHVES: Find video player element
BHVES -> BHVES: setupVideoPlayer(onStateUpdate, onTimeUpdate)
BHVES -> Player: Attach timeupdate event listener
BHVES --> User: Instance created
deactivate BHVES

== Data Management ==
User -> BHVES: addData({entries, options})
activate BHVES
BHVES -> BHVES: Count total items and validate data
BHVES -> BHVES: Process entries asynchronously
BHVES -> Store: storeData(name, data, sortData)
activate Store
Store -> Store: Convert data to internal format
Store -> IndexManager: addData(name, internalData, sortData)
activate IndexManager
IndexManager -> IndexManager: Process data in chunks
note right: Converts timestamps to Date objects
IndexManager -> IndexManager: Create binary search indexes
IndexManager --> Store: Index created
deactivate IndexManager
Store --> BHVES: Data stored
deactivate Store
BHVES -> User: onProgress(status)
note right: Reports loading progress

alt Success
    BHVES -> User: onSuccess(data)
    note right: Called when all data is processed
else Error
    BHVES -> User: onError(error)
    note right: Called when processing fails
end
BHVES --> User: Promise<Response<{name: string, itemCount: number}[]>>
deactivate BHVES

== Time Updates ==
Player -> BHVES: timeupdate event (videoPlayerTimeSeconds)
activate BHVES
BHVES -> BHVES: Get videoPlayerTimeSeconds from video player
BHVES -> BHVES: Calculate absolute timestamp\n(startTimestamp + videoPlayerTimeSeconds)
BHVES -> BHVES: Convert to ISO timestamp for onTimeUpdate callback
BHVES -> BHVES: Create currentTimeDate from absolute timestamp
BHVES -> Store: findMatchingIndexes(currentTimeDate)
activate Store
Store -> IndexManager: findMatchingIndexes(timestamp)
activate IndexManager
IndexManager -> IndexManager: Binary search for matching indexes
IndexManager --> Store: Matching indexes
deactivate IndexManager
Store --> BHVES: Matching indexes
deactivate Store
BHVES -> BHVES: Find active events using absolute timestamp
note right: Determines most recent active event
BHVES -> BHVES: Create state object for onStateUpdate callback
BHVES -> User: onTimeUpdate({videoPlayerTimeSeconds, timestamp})
BHVES -> User: onStateUpdate({state, data})
deactivate BHVES

@enduml 